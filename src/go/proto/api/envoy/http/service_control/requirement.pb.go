// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/envoy/http/service_control/requirement.proto

package google_api_envoy_http_service_control

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/lyft/protoc-gen-validate/validate"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type APIKeyLocation struct {
	// Types that are valid to be assigned to Key:
	//	*APIKeyLocation_Query
	//	*APIKeyLocation_Header
	//	*APIKeyLocation_Cookie
	Key                  isAPIKeyLocation_Key `protobuf_oneof:"key"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *APIKeyLocation) Reset()         { *m = APIKeyLocation{} }
func (m *APIKeyLocation) String() string { return proto.CompactTextString(m) }
func (*APIKeyLocation) ProtoMessage()    {}
func (*APIKeyLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dda622705118f3d, []int{0}
}

func (m *APIKeyLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIKeyLocation.Unmarshal(m, b)
}
func (m *APIKeyLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIKeyLocation.Marshal(b, m, deterministic)
}
func (m *APIKeyLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIKeyLocation.Merge(m, src)
}
func (m *APIKeyLocation) XXX_Size() int {
	return xxx_messageInfo_APIKeyLocation.Size(m)
}
func (m *APIKeyLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_APIKeyLocation.DiscardUnknown(m)
}

var xxx_messageInfo_APIKeyLocation proto.InternalMessageInfo

type isAPIKeyLocation_Key interface {
	isAPIKeyLocation_Key()
}

type APIKeyLocation_Query struct {
	Query string `protobuf:"bytes,1,opt,name=query,proto3,oneof"`
}

type APIKeyLocation_Header struct {
	Header string `protobuf:"bytes,2,opt,name=header,proto3,oneof"`
}

type APIKeyLocation_Cookie struct {
	Cookie string `protobuf:"bytes,3,opt,name=cookie,proto3,oneof"`
}

func (*APIKeyLocation_Query) isAPIKeyLocation_Key() {}

func (*APIKeyLocation_Header) isAPIKeyLocation_Key() {}

func (*APIKeyLocation_Cookie) isAPIKeyLocation_Key() {}

func (m *APIKeyLocation) GetKey() isAPIKeyLocation_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *APIKeyLocation) GetQuery() string {
	if x, ok := m.GetKey().(*APIKeyLocation_Query); ok {
		return x.Query
	}
	return ""
}

func (m *APIKeyLocation) GetHeader() string {
	if x, ok := m.GetKey().(*APIKeyLocation_Header); ok {
		return x.Header
	}
	return ""
}

func (m *APIKeyLocation) GetCookie() string {
	if x, ok := m.GetKey().(*APIKeyLocation_Cookie); ok {
		return x.Cookie
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*APIKeyLocation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*APIKeyLocation_Query)(nil),
		(*APIKeyLocation_Header)(nil),
		(*APIKeyLocation_Cookie)(nil),
	}
}

type APIKeyRequirement struct {
	Locations            []*APIKeyLocation `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
	AllowWithoutApiKey   bool              `protobuf:"varint,2,opt,name=allow_without_api_key,json=allowWithoutApiKey,proto3" json:"allow_without_api_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *APIKeyRequirement) Reset()         { *m = APIKeyRequirement{} }
func (m *APIKeyRequirement) String() string { return proto.CompactTextString(m) }
func (*APIKeyRequirement) ProtoMessage()    {}
func (*APIKeyRequirement) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dda622705118f3d, []int{1}
}

func (m *APIKeyRequirement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIKeyRequirement.Unmarshal(m, b)
}
func (m *APIKeyRequirement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIKeyRequirement.Marshal(b, m, deterministic)
}
func (m *APIKeyRequirement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIKeyRequirement.Merge(m, src)
}
func (m *APIKeyRequirement) XXX_Size() int {
	return xxx_messageInfo_APIKeyRequirement.Size(m)
}
func (m *APIKeyRequirement) XXX_DiscardUnknown() {
	xxx_messageInfo_APIKeyRequirement.DiscardUnknown(m)
}

var xxx_messageInfo_APIKeyRequirement proto.InternalMessageInfo

func (m *APIKeyRequirement) GetLocations() []*APIKeyLocation {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *APIKeyRequirement) GetAllowWithoutApiKey() bool {
	if m != nil {
		return m.AllowWithoutApiKey
	}
	return false
}

type Requirement struct {
	ServiceName          string             `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	OperationName        string             `protobuf:"bytes,2,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
	ApiKey               *APIKeyRequirement `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	CustomLabels         []string           `protobuf:"bytes,4,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty"`
	ApiName              string             `protobuf:"bytes,5,opt,name=api_name,json=apiName,proto3" json:"api_name,omitempty"`
	ApiVersion           string             `protobuf:"bytes,6,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Requirement) Reset()         { *m = Requirement{} }
func (m *Requirement) String() string { return proto.CompactTextString(m) }
func (*Requirement) ProtoMessage()    {}
func (*Requirement) Descriptor() ([]byte, []int) {
	return fileDescriptor_3dda622705118f3d, []int{2}
}

func (m *Requirement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Requirement.Unmarshal(m, b)
}
func (m *Requirement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Requirement.Marshal(b, m, deterministic)
}
func (m *Requirement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Requirement.Merge(m, src)
}
func (m *Requirement) XXX_Size() int {
	return xxx_messageInfo_Requirement.Size(m)
}
func (m *Requirement) XXX_DiscardUnknown() {
	xxx_messageInfo_Requirement.DiscardUnknown(m)
}

var xxx_messageInfo_Requirement proto.InternalMessageInfo

func (m *Requirement) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Requirement) GetOperationName() string {
	if m != nil {
		return m.OperationName
	}
	return ""
}

func (m *Requirement) GetApiKey() *APIKeyRequirement {
	if m != nil {
		return m.ApiKey
	}
	return nil
}

func (m *Requirement) GetCustomLabels() []string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

func (m *Requirement) GetApiName() string {
	if m != nil {
		return m.ApiName
	}
	return ""
}

func (m *Requirement) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func init() {
	proto.RegisterType((*APIKeyLocation)(nil), "google.api.envoy.http.service_control.APIKeyLocation")
	proto.RegisterType((*APIKeyRequirement)(nil), "google.api.envoy.http.service_control.APIKeyRequirement")
	proto.RegisterType((*Requirement)(nil), "google.api.envoy.http.service_control.Requirement")
}

func init() {
	proto.RegisterFile("api/envoy/http/service_control/requirement.proto", fileDescriptor_3dda622705118f3d)
}

var fileDescriptor_3dda622705118f3d = []byte{
	// 393 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x86, 0xc9, 0xa6, 0x1b, 0x9a, 0x49, 0x5b, 0x09, 0x4b, 0x40, 0xe0, 0x42, 0xb4, 0x08, 0x69,
	0x0f, 0x28, 0x29, 0x45, 0x48, 0x5c, 0xdb, 0x13, 0xa8, 0x15, 0x02, 0x23, 0xc1, 0x31, 0x72, 0xd3,
	0x51, 0xd7, 0x5a, 0x27, 0xe3, 0x3a, 0x4e, 0xaa, 0x3c, 0x0b, 0x27, 0x5e, 0x83, 0x13, 0xaf, 0xc3,
	0x5b, 0xa0, 0xd8, 0x09, 0x2d, 0x3d, 0xc1, 0x2d, 0x33, 0xff, 0xfc, 0xf9, 0xbf, 0x19, 0x19, 0x0e,
	0x85, 0x96, 0x05, 0x36, 0x3d, 0x0d, 0xc5, 0xc6, 0x5a, 0x5d, 0xb4, 0x68, 0x7a, 0x59, 0x61, 0x59,
	0x51, 0x63, 0x0d, 0xa9, 0xc2, 0xe0, 0x55, 0x27, 0x0d, 0xd6, 0xd8, 0xd8, 0x5c, 0x1b, 0xb2, 0xc4,
	0x5e, 0x5c, 0x12, 0x5d, 0x2a, 0xcc, 0x85, 0x96, 0xb9, 0x33, 0xe6, 0xa3, 0x31, 0xbf, 0x63, 0x7c,
	0xfa, 0xb8, 0x17, 0x4a, 0x5e, 0x08, 0x8b, 0xc5, 0xfc, 0xe1, 0xfd, 0xab, 0x0a, 0x0e, 0x8e, 0x3f,
	0xbe, 0x3f, 0xc5, 0xe1, 0x8c, 0x2a, 0x61, 0x25, 0x35, 0xec, 0x11, 0x2c, 0xaf, 0x3a, 0x34, 0x43,
	0x1a, 0x64, 0xc1, 0x3a, 0x7e, 0x77, 0x8f, 0xfb, 0x92, 0xa5, 0x10, 0x6d, 0x50, 0x5c, 0xa0, 0x49,
	0x17, 0x93, 0x30, 0xd5, 0xa3, 0x52, 0x11, 0x6d, 0x25, 0xa6, 0xe1, 0xac, 0xf8, 0xfa, 0x64, 0x09,
	0xe1, 0x16, 0x87, 0xd5, 0xb7, 0x00, 0x1e, 0xf8, 0x14, 0x7e, 0xb3, 0x00, 0xfb, 0x0c, 0xb1, 0x9a,
	0x42, 0xdb, 0x34, 0xc8, 0xc2, 0x75, 0x72, 0xf4, 0x26, 0xff, 0xa7, 0x75, 0xf2, 0xbf, 0x91, 0xf9,
	0xcd, 0x7f, 0xd8, 0x2b, 0x78, 0x28, 0x94, 0xa2, 0xeb, 0xf2, 0x5a, 0xda, 0x0d, 0x75, 0xb6, 0x14,
	0x5a, 0x96, 0x5b, 0x1c, 0x1c, 0xf4, 0x2e, 0x67, 0x4e, 0xfc, 0xea, 0xb5, 0x63, 0x2d, 0x4f, 0x71,
	0x58, 0x7d, 0x5f, 0x40, 0x72, 0x9b, 0xeb, 0x25, 0xec, 0xcd, 0x79, 0x8d, 0xa8, 0xd1, 0xdf, 0xe1,
	0x24, 0xfe, 0xf1, 0xeb, 0x67, 0xb8, 0x63, 0x16, 0x59, 0xc0, 0x93, 0x49, 0xfe, 0x20, 0x6a, 0x64,
	0x87, 0x70, 0x40, 0x1a, 0x8d, 0x8b, 0xf7, 0xf3, 0x8b, 0xbb, 0xf3, 0xfb, 0x7f, 0x06, 0x9c, 0xe3,
	0x13, 0xdc, 0x9f, 0xa1, 0xc6, 0x7b, 0x25, 0x47, 0x6f, 0xff, 0x6b, 0xeb, 0x5b, 0xa8, 0x3c, 0x12,
	0x6e, 0x05, 0xf6, 0x1c, 0xf6, 0xab, 0xae, 0xb5, 0x54, 0x97, 0x4a, 0x9c, 0xa3, 0x6a, 0xd3, 0x9d,
	0x2c, 0x5c, 0xc7, 0x7c, 0xcf, 0x37, 0xcf, 0x5c, 0x8f, 0x3d, 0x81, 0xdd, 0x31, 0xd7, 0x31, 0x2e,
	0x47, 0x46, 0x3e, 0x72, 0x38, 0xa4, 0x67, 0x90, 0x8c, 0x52, 0x8f, 0xa6, 0x95, 0xd4, 0xa4, 0x91,
	0x53, 0x41, 0x68, 0xf9, 0xc5, 0x77, 0xce, 0x23, 0xf7, 0x5a, 0x5e, 0xff, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x88, 0x5c, 0x1f, 0x83, 0xa1, 0x02, 0x00, 0x00,
}
